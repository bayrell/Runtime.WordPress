/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.WordPress.Theme.Api;

use Runtime.ORM.Connection;
use Runtime.ORM.Query;
use Runtime.ORM.QueryResult;
use Runtime.ORM.Relation;
use Runtime.Web.BaseApi;
use Runtime.Web.Annotations.ApiMethod;
use Runtime.WordPress.WP_Helper;


class GalleryApi extends BaseApi
{
	/**
	 * Returns api name
	 */
	pure string getApiName() => "runtime.wordpress.gallery";
	
	
	/**
	 * Action search
	 */
	@ApiMethod
	async void actionSearch()
	{
		Connection connection = Connection::get();
		
		/* Load items */
		string api_name = this.post_data.get("api_name");
		Query q = new Query()
			.select(["gallery_item.*"])
			.from("gallery_item")
			.innerJoin("gallery", ["gallery.id = gallery_item.gallery_id"])
			.where("gallery.api_name", "=", api_name)
			.orderBy("pos", "desc")
			.orderBy("id", "asc")
		;
		QueryResult result = await connection.fetchAll(q);
		
		/* Load images */
		Collection images_id = result.map(int (Relation item) => item.get("image_id"));
		Dict images = WP_Helper::loadImages(connection, images_id);
		
		/* Build items */
		Collection items = result.map(
			Dict (Relation item) use (images)
			{
				int image_id = item.get("image_id");
				return
				{
					"id": item.get("id"),
					"image_id": image_id,
					"image": images.get(image_id),
					"name": item.get("name"),
				};
			}
		);
		
		/* Return result */
		this.success({
			"data":
			{
				"items": items,
			}
		});
	}
	
}
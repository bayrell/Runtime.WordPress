/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.WordPress.Theme.Components.Gallery;

use Runtime.Serializer;
use Runtime.Web.ApiResult;
use Runtime.Web.RenderContainer;
use Runtime.Widget.Gallery.GalleryModel as BaseGalleryModel;


class GalleryModel extends BaseGalleryModel
{
	string api_name = "";
	string big_size = "medium_large";
	string small_size = "medium";
	
	
	/**
	 * Returns small image
	 */
	Collection getSmallImage(int pos)
	{
		Dict item = this.getItem(pos);
		if (not item) return "";
		
		Dict image = item["image", "sizes", this.small_size];
		if (not image) return "";
		
		return image.get("file");
	}
	
	
	/**
	 * Returns big image
	 */
	Collection getBigImage(int pos)
	{
		Dict item = this.getItem(pos);
		if (not item) return "";
		
		Dict image = item["image", "sizes", this.big_size];
		if (not image) return "";
		
		return image.get("file");
	}
	
	
	/**
	 * Init widget params
	 */
	void initParams(Dict params)
	{
		parent(params);
		
		if (params == null) return;
		if (params.has("api_name")) this.api_name = params.get("api_name");
		if (params.has("big_size")) this.big_size = params.get("big_size");
		if (params.has("small_size")) this.small_size = params.get("small_size");
	}
	
	
	/**
	 * Init widget settings
	 */
	void initWidget(Dict params)
	{
		parent(params);
	}
	
	
	/**
	 * Process frontend data
	 */
	void serialize(Serializer serializer, Map data)
	{
		serializer.process(this, "items", data);
		parent(serializer, data);
	}
	
	
	/**
	 * Load items
	 */
	async void loadItems()
	{
		ApiResult result = this.layout.callApi({
			"api_name": "runtime.wordpress.gallery",
			"method_name": "actionSearch",
			"data":
			{
				"api_name": this.api_name,
			},
		});
		if (result.isSuccess())
		{
			this.items = result.data.get("items");
		}
	}
	
	
	/**
	 * Load data
	 */
	async void loadData(RenderContainer container)
	{
		await parent(container);
		await this.loadItems();
	}
}
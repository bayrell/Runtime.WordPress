/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.WordPress.Database.Migrations;

use Runtime.ORM.BaseMigration;
use Runtime.ORM.Query;


class Core_2024_12 extends BaseMigration
{
	/**
	 * Returns name
	 */
	string getName() => "core_2024_12";
	
	
	/**
	 * Returns required migrations
	 */
	Collection<string> getRequired() => [];
	
	
	/**
	 * Migration up
	 */
	async void up()
	{
		Query q;
		
		/* Create wp_forms */
		string table_name = this.connection.prefix ~ "forms";
		this.comment("Create " ~ table_name ~ " table");
		this.executeSQL([
			"CREATE TABLE `" ~ table_name ~ "` (",
			"  `id` bigint(20) NOT NULL AUTO_INCREMENT,",
			"  `name` varchar(255) NOT NULL,",
			"  `api_name` varchar(255) NOT NULL,",
			"  `settings` text NOT NULL,",
			"  `email_to` varchar(255) NOT NULL,",
			"  `is_deleted` tinyint(4) NOT NULL DEFAULT 0,",
			"  PRIMARY KEY (`id`)",
			") ENGINE=InnoDB DEFAULT CHARSET=utf8mb3"
		]);
		
		/* Create wp_forms_data */
		string table_name = this.connection.prefix ~ "forms_data";
		this.comment("Create " ~ table_name ~ " table");
		this.executeSQL([
			"CREATE TABLE `" ~ table_name ~ "` (",
			"  `id` bigint(20) NOT NULL AUTO_INCREMENT,",
			"  `form_id` bigint(20) DEFAULT NULL,",
			"  `form_title` varchar(255) NOT NULL,",
			"  `form_position` varchar(255) NOT NULL,",
			"  `data` text NOT NULL,",
			"  `utm` text NOT NULL,",
			"  `send_email_uuid` varchar(255) NOT NULL,",
			"  `send_email_code` tinyint(4) NOT NULL DEFAULT 0,",
			"  `send_email_error` varchar(255) NOT NULL,",
			"  `spam` tinyint(4) NOT NULL DEFAULT 0,",
			"  `gmtime_add` datetime NOT NULL,",
			"  PRIMARY KEY (`id`),",
			"  KEY `form_id` (`form_id`)",
			") ENGINE=InnoDB DEFAULT CHARSET=utf8mb3"
		]);
		
		/* Create forms_ip */
		string table_name = this.connection.prefix ~ "forms_ip";
		this.comment("Create " ~ table_name ~ " table");
		this.executeSQL([
			"CREATE TABLE `" ~ table_name ~ "` (",
			"  `ip` varchar(64) COLLATE utf8mb4_unicode_ci NOT NULL,",
			"  `count` int(11) NOT NULL,",
			"  `last` int(11) NOT NULL,",
			"  PRIMARY KEY (`ip`),",
			") ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci"
		]);
	}
	
	
	/**
	 * Migration down
	 */
	async void down()
	{
		/* Drop tables */
		string table_name_forms = this.connection.prefix ~ "forms";
		string table_name_forms_data = this.connection.prefix ~ "forms_data";
		string table_name_forms_ip = this.connection.prefix ~ "forms_ip";
		this.comment("Drop tables");
		this.executeSQL([
			"DROP TABLES",
			"`" ~ table_name_forms ~ "`",
			"`" ~ table_name_forms_data ~ "`",
			"`" ~ table_name_forms_ip ~ "`"
		]);
	}
}
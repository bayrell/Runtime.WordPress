/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.WordPress.Admin.FormSettings;

use Runtime.ORM.Query;
use Runtime.Web.Crud.RelationService;
use Runtime.Web.Crud.Rules.LowerCase;
use Runtime.Web.Crud.Rules.Purify;
use Runtime.Web.Crud.Rules.Required;
use Runtime.Web.Crud.Rules.Unique;
use Runtime.WordPress.Database.Form;


class FormCrudService extends RelationService
{
    /**
	 * Returns relation name
	 */
	string getRelationName() => classof Form;
	
	
	/**
	 * Init rules
	 */
	void initRules()
	{
		this.rules.addRules([
			new Required{ "name": "name" },
			new Purify{ "name": "api_name" },
			new LowerCase{ "name": "api_name" },
			new Required{ "name": "api_name" },
			new Unique{"keys": ["api_name"]},
		]);
	}
	
	
	/**
	 * Returns save fields
	 */
	Collection getSaveFields() =>
	[
		"name",
		"api_name",
		"settings",
		"email_to",
	];
	
	
	/**
	 * Build search query
	 */
	async void buildSearchQuery(Query q)
	{
		q.orderBy("name", "asc");
	}
}
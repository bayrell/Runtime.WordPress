/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.WordPress.Admin.Settings;

use Runtime.lib;
use Runtime.Serializer;
use Runtime.Web.ApiResult;
use Runtime.Web.BasePageModel;
use Runtime.Web.RenderContainer;
use Runtime.Widget.WidgetResultModel;
use Runtime.WordPress.Admin.Settings.MigrationPage;
use Runtime.WordPress.Admin.Settings.TabsModel;


class MigrationPageModel extends BasePageModel
{
	string component = classof MigrationPage;
	TabsModel tabs = null;
	Collection<string> items = [];
	WidgetResultModel result = null;
	
	
	/**
	 * Init widget settings
	 */
	void initWidget(Dict params)
	{
		parent(params);
		
		/* Add tabs */
		this.tabs = this.addWidget(classof TabsModel, {
			"active": "database-migrations"
		});
		
		/* Add result */
		this.result = this.addWidget(classof WidgetResultModel, {
			"styles": ["margin_top"],
		});
	}
	
	
	/**
	 * Process frontend data
	 */
	void serialize(Serializer serializer, Map data)
	{
		serializer.process(this, "items", data);
		parent(serializer, data);
	}
	
	
	/**
	 * Update database
	 */
	async void updateDatabase()
	{
		this.result.setWaitMessage();
		ApiResult result = await this.layout.callApi({
			"api_name": "admin.wordpress.migration",
			"method_name": "actionUpdate",
		});
		this.result.setApiResult(result);
	}
	
	
	/**
	 * Load table data
	 */
	async void loadData(RenderContainer container)
	{
		await parent(container);
		
		ApiResult result = this.layout.callApi({
			"api_name": "admin.wordpress.migration",
			"method_name": "actionItem",
		});
		
		if (result.isSuccess())
		{
			this.items = result.data.get("items");
		}
	}
	
	
	/**
	 * Build title
	 */
	void buildTitle(RenderContainer container)
	{
		this.layout.setPageTitle("Migrations");
	}
}
/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.WordPress.Admin.Robots;

use Runtime.Web.BaseRoute;
use Runtime.Widget.Input;
use Runtime.Widget.Select;
use Runtime.Widget.TextArea;
use Runtime.Widget.Crud.CrudApiStorage;
use Runtime.Widget.Form.FormModel;
use Runtime.Widget.Form.SaveButtonModel;


class RobotsFormModel extends FormModel
{
	/**
	 * Create data storage
	 */
	CrudApiStorage createDataStorage() => new CrudApiStorage{
		"layout": this.layout,
		"class_name": "admin.wordpress.robots",
		"primary_keys": ["id"],
		"item_pk": true,
	};
	
	
	/**
	 * Init widget settings
	 */
	void initWidget(Dict params)
	{
		parent(params);
		
		/* Add fields */
		this.addFields([
			{
				"name": "content",
				"component": classof TextArea,
			},
		]);
		
		/* Add save button */
		this.bottom_buttons.addWidget(
			classof SaveButtonModel,
			{
				"form": this,
				"styles": ["large", "primary"],
			}
		);
	}
	
	
	/**
	 * Get page title
	 */
	string getPageTitle(string action = "")
	{
		return "Robots TXT";
	}
}
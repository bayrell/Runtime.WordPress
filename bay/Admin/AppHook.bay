/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.WordPress.Admin;

use Runtime.Web.Hooks.AppHook as BaseAppHook;
use Runtime.WordPress.Admin.CSS;
use Runtime.WordPress.Admin.DefaultLayout;


class AppHook extends BaseAppHook
{
	/**
	 * Register hooks
	 */
	void register_hooks()
	{
		this.register(static::CALL_API_BEFORE);
		this.register(static::COMPONENTS);
		this.register(static::LAYOUT_COMPONENT_NAME);
	}
	
	
	/**
	 * Call api before
	 */
	void call_api_before(Map params)
	{
		string api_url = "/wp-admin/admin-ajax.php?action=admin_call_api&api_name=" ~
			rs::url_encode(params.get("post_data").get("api_name"))
		;
		params.set("api_url", api_url);
	}
	
	
	/**
	 * Components
	 */
	void components(Map params)
	{
		params["components"].appendItems([
			classof CSS,
		]);
	}
	
	
	/**
	 * Layout component name
	 */
	void layout_component_name(Map params)
	{
		string layout_name = params.get("layout_name");
		if (layout_name == "default")
		{
			params.set("class_name", classof DefaultLayout);
		}
	}
}
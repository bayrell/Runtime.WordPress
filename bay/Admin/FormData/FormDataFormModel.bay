/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.WordPress.Admin.FormData;

use Runtime.Web.BaseRoute;
use Runtime.Widget.Input;
use Runtime.Widget.TextArea;
use Runtime.Widget.Crud.CrudApiStorage;
use Runtime.Widget.Crud.Form.FormModel;


class FormDataFormModel extends FormModel
{
	/**
	 * Create data storage
	 */
	CrudApiStorage createDataStorage() => new CrudApiStorage{
		"layout": this.layout,
		"class_name": "admin.wordpress.forms.data",
		"primary_keys": ["id"],
	};
	
	
	/**
	 * Init widget settings
	 */
	void initWidget()
	{
		parent();
		
		/* Add fields */
		this.addFields([
			{
				"name": "form_title",
				"label": "Title",
				"component": classof Input,
				"props": {
					"readonly": true,
				}
			},
			{
				"name": "data",
				"label": "Data",
				"component": classof TextArea,
				"props": {
					"readonly": true,
				}
			},
			{
				"name": "gmtime_add",
				"label": "Data",
				"component": classof Input,
				"props": {
					"readonly": true,
				}
			},
		]);
	}
	
	
	/**
	 * Get page title
	 */
	string getPageTitle(string action = "")
	{
		if (action == "edit")
		{
			return "Edit form " ~ this.storage.item.get("api_name");
		}
		return "";
	}
	
	
	/**
	 * Returns item value
	 */
	var getItemValue(Map item, string field_name)
	{
		if (field_name == "data")
		{
			Dict data = item.get("data");
			if (data == null) return "";
			
			Collection items = data
				.transition(
					string (string value, string key)
					{
						return key ~ ": " ~ value;
					}
				)
			;
			
			return rs::join("\n", items);
		}
		if (field_name == "gmtime_add")
		{
			DateTime gmtime_add = item.get("gmtime_add");
			return gmtime_add ? gmtime_add.toString() : "";
		}
		return parent(item, field_name);
	}
}